# Defines the structure of the panres_v2.owl ontology file for parsing.
# Updated based on the provided OWL snippet.

# --- Namespaces ---
# Namespaces explicitly defined or implied in the OWL file.
namespaces:
  rdf: "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  owl: "http://www.w3.org/2002/07/owl#"
  xsd: "http://www.w3.org/2001/XMLSchema#"
  # Default namespace from xml:base and xmlns attribute in rdf:RDF tag
  "": "http://myonto.com/PanResOntology.owl#"
  # Custom namespace found (likely from Owlready tool)
  owlr: "http://www.lesfleursdunormal.fr/static/_downloads/owlready_ontology.owl#"

# --- Ontology Elements ---
# Defines how to identify and extract information for different types of ontology elements.
elements:
  # --- Classes ---
  class:
    tag: ["owl:Class"] # Primary tag used
    id_attribute: ["rdf:about"] # URI identifier
    children:
      subClassOf:
        tag: ["rdfs:subClassOf"]
        # How to find the parent: direct link or complex structure
        resource_attribute: ["rdf:resource"] # For simple parent links (#ParentClass, owl:Thing)
        complex_structure: "owl:Restriction" # Indicates restrictions might be nested here
        allow_multiple: true # A class can have multiple superclasses/restrictions
      label:
        tag: ["rdfs:label"]
        type: text_content # Get the text inside the tag
        # value_attribute: ["rdf:datatype"] # Optional: capture datatype attribute (usually xsd:string)
      comment:
        # Standard comment tag (keep even if not in snippet)
        tag: ["rdfs:comment"]
        type: text_content
      disjointWith:
        tag: ["owl:disjointWith"]
        resource_attribute: ["rdf:resource"]
        allow_multiple: true
      # Captures annotations applied directly to the class definition.
      # The tag name itself is the annotation property URI (e.g., #is_drug_combination).
      # Parsing requires identifying AnnotationProperty definitions and checking for their presence here.
      annotations:
        type: direct_annotation_properties # Placeholder type indicating this pattern
        value_attribute: ["rdf:datatype"] # Annotations often have datatypes
        allow_multiple: true

  # --- Properties ---
  object_property:
    tag: ["owl:ObjectProperty"]
    id_attribute: ["rdf:about"]
    children:
      label:
        tag: ["rdfs:label"]
        type: text_content
      comment:
        tag: ["rdfs:comment"]
        type: text_content
      domain:
        tag: ["rdfs:domain"]
        resource_attribute: ["rdf:resource"] # Can be a direct link
        complex_structure: "owl:Class" # Or can contain a complex class expression (e.g., unionOf)
      range:
        tag: ["rdfs:range"]
        resource_attribute: ["rdf:resource"] # Can be a direct link
        complex_structure: "owl:Class" # Or can contain a complex class expression (e.g., unionOf)
      # Example of capturing a specific annotation on the property definition itself
      owlr_class_property_type: # Using the local name of the property for the key
        tag: ["owlr:class_property_type"]
        type: text_content

  datatype_property:
    tag: ["owl:DatatypeProperty"]
    id_attribute: ["rdf:about"]
    children:
      label:
        tag: ["rdfs:label"]
        type: text_content
      comment:
        tag: ["rdfs:comment"]
        type: text_content
      domain:
        tag: ["rdfs:domain"]
        resource_attribute: ["rdf:resource"] # Usually a direct link
        complex_structure: "owl:Class" # Could potentially be complex (e.g., unionOf)
      range:
        tag: ["rdfs:range"]
        resource_attribute: ["rdf:resource"] # Links to XSD datatype URI (e.g., xsd:string)

  annotation_property:
    tag: ["owl:AnnotationProperty"]
    id_attribute: ["rdf:about"]
    children:
      label:
        tag: ["rdfs:label"]
        type: text_content
      comment:
        tag: ["rdfs:comment"]
        type: text_content
      domain:
        tag: ["rdfs:domain"]
        resource_attribute: ["rdf:resource"] # Can be a direct link
        complex_structure: "owl:Class" # Or can contain a complex class expression (e.g., unionOf)
      range:
        tag: ["rdfs:range"]
        resource_attribute: ["rdf:resource"] # Links to XSD datatype URI (e.g., xsd:string, xsd:boolean)

  # --- Individuals (Instances) ---
  individual:
    tag: ["owl:NamedIndividual"]
    id_attribute: ["rdf:about"]
    children:
      # Type: The class(es) the individual belongs to
      type:
        tag: ["rdf:type"]
        resource_attribute: ["rdf:resource"]
        allow_multiple: true # An individual can belong to multiple classes
      label: # Individuals might have labels/comments too
        tag: ["rdfs:label"]
        type: text_content
      comment:
        tag: ["rdfs:comment"]
        type: text_content
      # Generic placeholder for property assertions made on the individual.
      # Parsing logic needs to iterate through child elements of the individual.
      # The child tag name is the property URI (e.g., #is_from_database, #has_length).
      # Check for rdf:resource attribute for object properties.
      # Check for rdf:datatype attribute (and get text content) for data/annotation properties.
      property_assertions:
        type: direct_properties # Placeholder type indicating this pattern
        allow_multiple_per_property: true # e.g., multiple #original_fasta_header allowed

# --- Complex Structures (Informational) ---
# Details known complex structures. Parsing these requires specific logic
# beyond simple tag mapping defined in the 'elements' section.
complex_structures:
  restriction:
    tag: "owl:Restriction"
    children:
      onProperty:
        tag: "owl:onProperty"
        resource_attribute: "rdf:resource"
      someValuesFrom: # Example restriction type found
        tag: "owl:someValuesFrom"
        resource_attribute: "rdf:resource"
      # Other potential restriction types: allValuesFrom, hasValue, cardinality, etc.
  unionOf:
    tag: "owl:unionOf"
    attribute: "rdf:parseType" # Expected value: "Collection"
    # Items within the collection that define the union members
    item_tags: ["rdf:Description", "owl:Class"]
    item_id_attribute: ["rdf:about", "rdf:resource"]
